name: my-app
cluster: my-app
stack_name: my-app-ecs
task_execution_role_name: ecsTaskExecutionRole
task_role_name: ecsTaskRole
image:
  arch: 'ARM64'
  os: 'LINUX'
aws:
  region: eu-west-3
vpc:
  security_groups:
    - sg-xxxx
  subnets:
    - subnet-xxxxx
hooks:
  # commands to execute before building the image
  prebuild:
    - cmd_1
    - cmd_2
# YAML aliases, 'presets' will be ignored at parse time
presets:
  default: &default
    network_mode: bridge
    cpu: 128
    memory: 256
    swap_size: 512
    launch_type: EC2
services:
  web:
    <<: *default
    count: 1
    command: [bundle, exec, puma]
    ports:
      # {app_protocol}:{container_port}[:{host_port}}][/{protocol}]
      # examples:
      # - http:80/tcp
      # - http:8080:80/tcp
      - http:8080
    load_balancers:
      -
        target_group: tg-my-app
        port: 80
    capacity_provider_strategies:
      - { name: 'EC2_SPOT', base: 1, weight: 1 }
scheduled_tasks:
  task1:
    <<: *default
    schedule_expression: rate(5 minutes)
    command: [bundle, exec, rails, -v]
environment:
  FOO: BAR
secrets:
  # secrets to load from SSM Parameter Store
  # arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${name}/${secret_name}
  # ex: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/my-app/MY_ENV_VAR
  - MY_ENV_VAR
